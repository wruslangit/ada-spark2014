{
  "spark": [
    {
      "name": "pkg_math_functions",
      "sloc": [
        {
          "file": "pkg_math_functions.ads",
          "line": 3
        }
      ],
      "spark": "all"
    },
    {
      "name": "pkg_math_functions.Sqrt",
      "sloc": [
        {
          "file": "pkg_math_functions.ads",
          "line": 9
        }
      ],
      "spark": "all"
    },
    {
      "name": "pkg_math_functions.Exp",
      "sloc": [
        {
          "file": "pkg_math_functions.ads",
          "line": 10
        }
      ],
      "spark": "all"
    },
    {
      "name": "pkg_math_functions.Find",
      "sloc": [
        {
          "file": "pkg_math_functions.ads",
          "line": 12
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
  ],
  "session_map": {
    " 1": "/home/wruslan/github/spark-studio-01/obj/gnatprove/pkg_math_functions__sqrt",
    " 2": "/home/wruslan/github/spark-studio-01/obj/gnatprove/pkg_math_functions__find",
    " 3": "/home/wruslan/github/spark-studio-01/obj/gnatprove/pkg_math_functions__exp"
  },
  "proof": [
    {
      "file": "pkg_math_functions.adb",
      "line": 12,
      "col": 27,
      "rule": "VC_FP_OVERFLOW_CHECK",
      "severity": "info",
      "entity": {
        "name": "pkg_math_functions.Sqrt",
        "sloc": [
          {
            "file": "pkg_math_functions.ads",
            "line": 9
          }
        ]
      },
      "check_tree": {
      },
      "msg_id": 0,
      "how_proved": "trivial"
    },
    {
      "file": "pkg_math_functions.adb",
      "line": 12,
      "col": 27,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "pkg_math_functions.Sqrt",
        "sloc": [
          {
            "file": "pkg_math_functions.ads",
            "line": 9
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "pkg_math_functions.adb",
      "check_line": 12,
      "check_col": 27,
      "msg_id": 1,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "pkg_math_functions.adb",
      "line": 33,
      "col": 24,
      "rule": "VC_RANGE_CHECK",
      "severity": "info",
      "entity": {
        "name": "pkg_math_functions.Find",
        "sloc": [
          {
            "file": "pkg_math_functions.ads",
            "line": 12
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 25,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "pkg_math_functions.adb",
      "check_line": 33,
      "check_col": 24,
      "msg_id": 2,
      "session_dir": 2,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "pkg_math_functions.ads",
      "line": 14,
      "col": 16,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "pkg_math_functions.Find",
        "sloc": [
          {
            "file": "pkg_math_functions.ads",
            "line": 12
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 13,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "pkg_math_functions.ads",
      "check_line": 14,
      "check_col": 16,
      "msg_id": 3,
      "session_dir": 2,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "pkg_math_functions.adb",
      "line": 25,
      "col": 20,
      "rule": "VC_FP_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "pkg_math_functions.Exp",
        "sloc": [
          {
            "file": "pkg_math_functions.ads",
            "line": 10
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (sat)",
              "steps": 8694,
              "time": 1.00000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (sat)",
              "steps": 8498,
              "time": 1.00000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "pkg_math_functions.adb",
      "check_line": 25,
      "check_col": 20,
      "cntexmp": {
        "pkg_math_functions.adb": {
          "previous": {
          },
          "current": {
            "25": [
              {
                "name": "Base",
                "value": "3.3752146E+38",
                "kind": "variable"
              },
              {
                "name": "Exponent",
                "value": "1.9359426E+0",
                "kind": "variable"
              }
            ]
          }
        },
        "pkg_math_functions.ads": {
          "previous": {
          },
          "current": {
            "10": [
              {
                "name": "Base",
                "value": "3.3752146E+38",
                "kind": "variable"
              },
              {
                "name": "Exponent",
                "value": "1.9359426E+0",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 4,
      "session_dir": 3,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "pkg_math_functions",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 3
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "pkg_math_functions.Exp",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 10
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "pkg_math_functions.Find",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 12
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "pkg_math_functions.Find",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 12
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "pkg_math_functions.Find",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 12
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "pkg_math_functions.Sqrt",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 9
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "pkg_math_functions.Sqrt",
          "sloc": [
            {
              "file": "pkg_math_functions.ads",
              "line": 9
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.inline_trivial": 2.61840015649796E-01,
    "codepeer results": 5.29999997525010E-05,
    "init_why_sections": 1.04500004090369E-03,
    "gnatwhy3.transformations.detect_polymorphism": 1.29100005142391E-03,
    "globals/properties (advanced)": 3.62999999197200E-04,
    "gnatwhy3.transformations.eliminate_literal": 2.60819997638464E-02,
    "gnatwhy3.run_vcs": 3.93516987562180E-01,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 2.57019996643066E-02,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 2.38850004971027E-02,
    "flow analysis": 2.62899999506772E-03,
    "gnatwhy3.transformations.simplify_formula": 2.02569998800755E-02,
    "marking": 3.03999986499548E-04,
    "translation of standard": 6.20099995285273E-03,
    "gnatwhy3.register_vcs": 1.90340001136065E-02,
    "gnatwhy3.transformations.eliminate_epsilon": 2.42539998143911E-02,
    "globals (basic)": 2.41999994614162E-04,
    "gnatwhy3.schedule_vcs": 7.71499983966351E-03,
    "gnatwhy3.transformations.prepare_for_counterexmp": 7.39300018176436E-03,
    "gnatwhy3.save_session": 5.62399998307228E-03,
    "gnatwhy3.transformations.eliminate_inductive": 2.28620003908873E-02,
    "gnatwhy3.transformations.encoding_smt_if_poly": 1.49999996210681E-05,
    "gnatwhy3.transformations.eliminate_unused_hypo": 1.27569995820522E-02,
    "gnatwhy3.transformations.eliminate_builtin": 2.75679994374514E-02,
    "gnatwhy3.transformations.discriminate_if_poly": 2.99999992421363E-05,
    "gnatwhy3.init": 1.10475099086761E+00
  }
}
